services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: docker/local/Dockerfile
    restart: unless-stopped
    entrypoint: /app/docker/local/server-entrypoint.sh
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    expose:
      - "8000"
    ports:
      - "8000:8000"
    env_file:
      - ./.envs/.local/django.env
      - ./.envs/.local/rabbitmq.env
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - mentor-flow

  db:
    image: postgres:17.6-alpine3.22
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./.envs/.local/postgresql.env
    networks:
      - mentor-flow

  redis:
      image: redis:8.2-alpine
      container_name: redis
      restart: unless-stopped
      expose:
            - "6379"
      networks:
          - mentor-flow
          
  rabbitmq:
      image: rabbitmq:4.1.3-management-alpine
      container_name: rabbitmq
      restart: unless-stopped
      env_file:
          - ./.envs/.local/rabbitmq.env
      ports:
          - "5672:5672"
          - "15672:15672"
      networks:
          - mentor-flow

  celery-beat:
      container_name: celery-beat
      restart: unless-stopped
      build:
          context: .
          dockerfile: docker/local/Dockerfile
      entrypoint: /app/docker/celery-beat-entrypoint.sh
      volumes:
          - static_volume:/app/staticfiles
      env_file:
          - ./.envs/.local/django.env
      depends_on:
          - rabbitmq
          - redis
          - worker
      networks:
          - mentor-flow

  worker:
      restart: unless-stopped
      container_name: worker
      build:
          context: .
          dockerfile: docker/local/Dockerfile
      entrypoint: /app/docker/worker-entrypoint.sh
      volumes:
          - static_volume:/app/staticfiles
      env_file:
          - ./.envs/.local/django.env
      depends_on:
          - rabbitmq
      networks:
          - mentor-flow

  flower:
      image: mher/flower
      container_name: flower
      restart: unless-stopped
      command: celery flower --persisten=True
      env_file:
          - ./.envs/.local/django.env
      ports:
          - "5555:5555"
      depends_on:
          - rabbitmq
          - server
      networks:
          - mentor-flow

volumes:
    postgresql_data:
    static_volume:
    media_volume:

networks:
    mentor-flow:
        driver: bridge